// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
//using System.Numerics;
using System.Runtime.InteropServices;
using System.Text;
using UnityEngine;

using Unity.VisualScripting;
using UnityEditor.ShaderGraph.Internal;

namespace ClamFFI
{

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct Vec3
    {
        public float x;
        public float y;
        public float z;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe class NodeBaton
    {
        public Vec3 pos;
        public Vec3 color;
        public byte* id;
        public byte* leftID;
        public byte* rightID;
        public int cardinality;
        public int depth;
        public int argCenter;
        public int argRadius;
    }

    public unsafe class Node
    {
        public Vector3 pos;
        public Vector3 color;
        public string id, leftID, rightID;
        public int cardinality;
        public int depth;
        public int argCenter;   
        public int argRadius;   

        public Node(NodeBaton baton)
        {
            pos = new Vector3(baton.pos.x, baton.pos.y, baton.pos.z);
            color = new Vector3(baton.color.x, baton.color.y, baton.color.z);

            id = new String((sbyte*)baton.id);
            leftID = new String((sbyte*)baton.leftID);
            rightID = new String((sbyte*)baton.rightID);

            cardinality = baton.cardinality;
            depth = baton.depth;
            argCenter = baton.argCenter;    
            argRadius = baton.argRadius;
            
        }
    }

    public static class Clam
    {
	public const string __DllName = "clam_ffi_20230610121255";
        private static IntPtr _handle;
       
        public unsafe delegate void NodeVisitor(NodeBaton baton);

        [DllImport(__DllName, EntryPoint = "create_reingold_layout", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        private static extern int create_reingold_layout(IntPtr ptr, NodeVisitor callback);

        public static int CreateReingoldLayout(NodeVisitor callback)
        {
            return create_reingold_layout(_handle, callback);
        }

        [DllImport(__DllName, EntryPoint = "get_num_nodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int get_num_nodes(IntPtr handle);

        public static int GetNumNodes()
        {
            return get_num_nodes(_handle);
        }

        [DllImport(__DllName, EntryPoint = "traverse_tree_df", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        private static extern int traverse_tree_df(IntPtr ptr, NodeVisitor callback);

        public static int TraverseTreeDF(NodeVisitor callback)
        {
            return traverse_tree_df(_handle, callback);
        }

        [DllImport(__DllName, EntryPoint = "init_clam", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        private static extern int init_clam(out IntPtr ptr, byte[] data_name, int name_len, uint cardinality);

        public static int InitClam(string dataName, uint cardinality)
        {
            byte[] byteName = Encoding.UTF8.GetBytes(dataName);
            int len = byteName.Length;

            return init_clam(out _handle, byteName, len, cardinality);
        }
    }
}
